public function select(Request $request)
    {
        $query = $request->input('query');
        preg_match('/SELECT \* FROM (\w+)/i', $query, $matches);
    
        if (empty($matches[1])) {
            return response()->json(['success' => false, 'message' => 'Invalid table name in query.']);
        }
    
        $tableName = $matches[1];
        $dbName = session('selected_db');
        $dbRecord = DB::table('general_bd_tables')
        ->where('db_name', $dbName)
        ->first();  // Ensure you track selected database in session
    
        // Retrieve the table ID from metadata
        $tableRecord = DB::select('SELECT table_id FROM general_table_tables WHERE db_id = ? AND table_name = ?', [$dbRecord->id_bd, $tableName]);
    
        if (empty($tableRecord)) {
            return response()->json(['success' => false, 'message' => 'Table not found.']);
        }
    
        $tableId = $tableRecord[0]->table_id;
    
        // Fetch column metadata
        $columns = DB::select('SELECT attribute_id, attribute_name FROM general_attribute_tables WHERE table_id = ? ORDER BY attribute_id', [$tableId]);
    
        if (empty($columns)) {
            return response()->json(['success' => false, 'message' => 'No columns found for this table.']);
        }
    
        // Fetch data for each column and organize it
        $organizedData = [];
        foreach ($columns as $column) {
            $columnData = DB::select('SELECT attribute_values FROM general_value_tables WHERE id_attr = ?', [$column->attribute_id]);
            $organizedData[$column->attribute_name] = array_map(function ($row) {
                return $row->attribute_values;
            }, $columnData);
        }
    
        return response()->json([
            'success' => true,
            'columns' => array_keys($organizedData),
            'data' => $organizedData
        ]);
    }



function loadTables(dbId, dbName) {
    document.getElementById('sql-query').value = `USE ${dbName};\nSHOW TABLES;`;

    // Remove 'selected-db' class from all database items
    document.querySelectorAll('.database-item').forEach(item => {
        item.classList.remove('selected-db');
    });

    // Add 'selected-db' class to the clicked item
    const clickedItem = event.currentTarget;
    clickedItem.classList.add('selected-db');

    // Fetch tables from the server for the selected database
    $.get('/tables/' + dbId)
        .done(function(data) {
            const tableSelection = document.getElementById('table-selection');
            tableSelection.innerHTML = '';

            if (data.tables && data.tables.length > 0) {
                data.tables.forEach(function(table) {
                    const tableDiv = document.createElement('div');
                    tableDiv.classList.add('table-item');
                    tableDiv.innerText = table;

                    tableDiv.onclick = () => {
                        // Send AJAX request when tableDiv is clicked
                        $.ajax({
                            url: '/select', // Route to Laravel controller function 'select'
                            type: 'POST',
                            data: {
                                query: `SELECT * FROM ${table}`,
                                _token: $('meta[name="csrf-token"]').attr('content') // CSRF token
                            },
                            success: function(response) {
                                displayTableData(response); // Function to handle the response and display data
                            },
                            error: function(xhr, status, error) {
                                console.error('Failed to fetch table data', status, error, xhr.responseText);
                                alert('Failed to fetch table data.');
                            }
                        });
                    };

                    tableSelection.appendChild(tableDiv);
                });
            } else {
                tableSelection.innerHTML = 'No tables found for this database.';
            }
        })
        .fail(function(xhr, status, error) {
            console.error('AJAX Request Failed', status, error, xhr.responseText);
            alert('Failed to load tables. Check the console for more details.');
        });
}

function displayTableData(response) {
    if (response.success) {
        let resultHtml = '<table border="1" cellpadding="10" cellspacing="0"><thead><tr>';
        
        // Create table headers from columns
        response.columns.forEach(function(column) {
            resultHtml += `<th>${column}</th>`;
        });
        resultHtml += '</tr></thead><tbody>';

        // Get the number of rows from the first column's data length
        let rowCount = response.data[response.columns[0]].length;
        for (let i = 0; i < rowCount; i++) {
            resultHtml += '<tr>';
            response.columns.forEach(function(column) {
                resultHtml += `<td>${response.data[column][i]}</td>`;
            });
            resultHtml += '</tr>';
        }

        resultHtml += '</tbody></table>';
        $('#result-output').html(resultHtml); // Display the table in a specific div
    } else {
        alert('Error: ' + response.message);
    }
}